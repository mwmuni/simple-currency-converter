# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python package

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up UV with Python ${{ matrix.python-version }}
        uses: astral-sh/setup-uv@v5.3.1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install the project
        run: uv sync --all-extras --dev
      - name: Run tests
        # For example, using `pytest`
        run: uv run pytest tests

  publish:
    needs: build
    if: github.event_name == 'release' && github.event.action == 'created'
    runs-on: ubuntu-latest
    permissions:
      id-token: write  # For trusted publishing to PyPI
    
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.13"
    - name: Set up UV
      uses: astral-sh/setup-uv@v5.3.1
    - name: Build package
      run: |
        uv build
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_TOKEN }}
        repository-url: https://upload.pypi.org/legacy/
              
